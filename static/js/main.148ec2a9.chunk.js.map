{"version":3,"sources":["context/LoginContext.js","context/TodoContext.js","server/fbase.js","server/firestore.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","components/TodoCreate.js","context/TodoListReducer.js","routes/Home.js","routes/List.js","components/AuthForm.js","routes/Login.js","routes/User.js","components/Navigation.js","components/Router.js","App.js","index.js"],"names":["LoginContext","createContext","initialTodoList","TodoListContext","auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","createTodayString","getStorage","Date","toLocaleDateString","replace","split","join","createTodosDateLink","uid","saveTodo","dispatch","userObj","data","a","batch","writeBatch","newTodos","i","length","newId","idString","String","newTodo","id","todoRef","doc","set","push","type","payload","date","todos","commit","alert","TodoHeadBlock","styled","div","TodoHead","today","dateString","year","month","day","dayName","weekday","useContext","undoneTodos","filter","item","done","className","Provider","value","color","size","onClick","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","text","e","TodoListBlock","TodoList","map","TodoTemplateBlock","TodoTemplate","children","CircleButton","button","open","boxUp","keyframes","boxDown","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setText","nextId","inputRef","useRef","handleKeyPress","event","key","preventDefault","current","onTransitionEnd","focus","autoFocus","placeholder","onKeyPress","onChange","target","tabIndex","ref","saveItems","newItems","localStorage","setItem","JSON","stringify","reducer","state","action","concat","nextState","Home","useReducer","useEffect","localData","parse","getItem","at","q","query","collection","onSnapshot","snapshot","docs","parseInt","error","console","log","getTodos","ListTemplate","List","AuthContainer","AuthInput","AuthSubmit","AuthSwitch","span","AuthError","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","setError","name","onSubmit","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","LoginContainer","Title","AuthBtns","AuthBtn","Login","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","code","customData","fetchSignInMethodsForEmail","methods","UserTemplate","User","history","useNavigate","signOut","Nav","nav","Li","li","Navigation","to","AppRouter","isLoggedIn","Boolean","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","displayName","refreshUser","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148ec2a9.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst initialLogin = \"\";\r\n\r\nconst LoginContext = createContext(initialLogin);\r\n\r\nexport default LoginContext;\r\n","import { createContext } from \"react\"\r\n\r\n// 초기 데이터\r\n// 상위 provider가 없는데 하위 컴포넌트가 이걸 읽으려고 할 때 \r\n// 앱 크래시를 막는 방어 데이터\r\nconst initialTodoList = []\r\n\r\n// 초기값이 []인 컨텍스트 생성\r\nconst TodoListContext = createContext(initialTodoList)\r\n\r\nexport default TodoListContext","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\nexport const storage = getStorage();\r\nexport default app;\r\n","import {\r\n  collection,\r\n  doc,\r\n  onSnapshot,\r\n  query,\r\n  writeBatch,\r\n} from \"@firebase/firestore\";\r\nimport { db } from \"server/fbase\";\r\n\r\nconst createTodayString = () => {\r\n  const today = new Date();\r\n  return today\r\n    .toLocaleDateString(\"ko-KR\")\r\n    .replace(/\\./g, \"\")\r\n    .split(\" \")\r\n    .join(\"\");\r\n};\r\n\r\nconst createTodosDateLink = (uid) => {\r\n  return `todos/${uid}/${createTodayString()}`;\r\n};\r\n\r\nexport const initialState = (uid) => {\r\n  return { uid, date: createTodayString(), todos: [] };\r\n};\r\n\r\n/* 저장된 todos 가져오기\r\nlocalStorage의 data확인\r\nif data가 있음 && 오늘 날짜 && uid 같음\r\n-> localStorage 사용\r\nelse \r\n-> firestore 데이터로 localStorage 덮어쓰기\r\n\r\n*/\r\nexport const getTodos = (dispatch, userObj, nextId) => {\r\n  const localData = JSON.parse(localStorage.getItem(\"data\")) || {};\r\n  if (\r\n    localData.length !== 0 &&\r\n    localData.uid === userObj.uid &&\r\n    localData.date === createTodayString()\r\n  ) {\r\n    dispatch({ type: \"SAVE\", payload: localData });\r\n    nextId.current =\r\n      localData.todos.length === 0 ? 1 : localData.todos.at(-1).id + 1;\r\n  } else {\r\n    try {\r\n      const q = query(collection(db, createTodosDateLink(userObj.uid)));\r\n      onSnapshot(q, (snapshot) => {\r\n        const todos =\r\n          snapshot.docs.map((doc) => ({\r\n            ...doc.data(),\r\n            id: parseInt(doc.id),\r\n          })) || [];\r\n        dispatch({\r\n          type: \"SAVE\",\r\n          payload: { uid: userObj.uid, date: createTodayString(), todos },\r\n        });\r\n        nextId.current = todos.length === 0 ? 1 : todos.at(-1).id + 1;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\n//export const deleteTodo = async (creatorId, id) => await deleteDoc(doc(db, `${creatorId}/${id}`));\r\nexport const saveTodo = async (dispatch, userObj, data) => {\r\n  const batch = writeBatch(db);\r\n  let newTodos = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    const newId = i + 1;\r\n    const idString = String(newId);\r\n    const newTodo = { ...data[i], id: newId };\r\n\r\n    const todoRef = doc(db, createTodosDateLink(userObj.uid), idString);\r\n    batch.set(todoRef, newTodo);\r\n    newTodos.push(newTodo);\r\n  }\r\n  dispatch({\r\n    type: \"SAVE\",\r\n    payload: { uid: userObj.uid, date: createTodayString(), todos: newTodos },\r\n  });\r\n\r\n  await batch.commit();\r\n  alert(\"서버에 저장 완료!\");\r\n};\r\n\r\n//export const clearTodo = async (creatorId) => await deleteDoc(doc(db, creatorId));\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\nimport { MdSave } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { saveTodo } from \"server/firestore\";\r\nimport LoginContext from \"context/LoginContext\";\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 20px;\r\n\r\n  border-bottom: 1px solid #e9ecef;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n\r\n  .task-left {\r\n    color: #7c83fd;\r\n    font-size: 18px;\r\n    margin-top: 3px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .task {\r\n    display: flex;\r\n    margin-top: 40px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .upload {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .upload-text {\r\n    color: #7c83fd;\r\n    font-size: 18px;\r\n    margin-top: 3px;\r\n  }\r\n  .upload-button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction TodoHead() {\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n  const dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\r\n\r\n  const { data, dispatch } = useContext(TodoListContext);\r\n  const { userObj } = useContext(LoginContext);\r\n  const undoneTodos = data.todos.filter((item) => item.done === false);\r\n\r\n  const onSaveFirestore = () => {\r\n    saveTodo(dispatch, userObj, data);\r\n  };\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"task\">\r\n        <div className=\"task-left\">{undoneTodos.length}개 남음</div>\r\n        <div className=\"upload\">\r\n          <div className=\"upload-text\">서버에 저장</div>\r\n          <div className=\"upload-button\">\r\n            <IconContext.Provider\r\n              value={{\r\n                color: \"#142F43\",\r\n                size: \"2rem\",\r\n              }}\r\n            >\r\n              <MdSave onClick={onSaveFirestore} />\r\n            </IconContext.Provider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default TodoHead;\r\n","import styled, { css } from \"styled-components\";\r\nimport { MdDone, MdDelete } from \"react-icons/md\";\r\nimport { useContext } from \"react\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #8ca1a5;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 2px solid #787a91;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 2px solid #297f87;\r\n      color: #297f87;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #787a91;\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\nconst TodoItem = ({ id, done, text }) => {\r\n  const { dispatch } = useContext(TodoListContext);\r\n\r\n  const onRemoveClick = (e) => {\r\n    dispatch({ type: \"DELETE\", payload: { id } });\r\n  };\r\n  const onCircleClick = (e) => {\r\n    dispatch({ type: \"DONE\", payload: { id } });\r\n  };\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onCircleClick}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemoveClick}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n  background: #b5deff;\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 15px;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 15px;\r\n    background-color: darkgrey;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #7c83fd;\r\n    border: 3px solid transparent;\r\n    background-clip: content-box;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n`;\r\n\r\n// context를 사용하는 consumer\r\n// useContext로 context를 지정해두면 이 앱 밖에서 provider를 찾음\r\nconst TodoList = () => {\r\n  const { data } = useContext(TodoListContext);\r\n  return (\r\n    <TodoListBlock>\r\n      {data.todos.map((item) => {\r\n        return (\r\n          <TodoItem\r\n            text={item.text}\r\n            done={item.done}\r\n            id={item.id}\r\n            key={item.id}\r\n          ></TodoItem>\r\n        );\r\n      })}\r\n    </TodoListBlock>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import styled from \"styled-components\";\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n\r\n  margin: 0 auto;\r\n\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const TodoTemplate = ({ children }) => {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n};\r\n","import { useContext, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #63e6be;\r\n  }\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst boxUp = keyframes`\r\n  from {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst boxDown = keyframes`\r\n  from {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n  visibility: ${(props) => (props.open ? \"visible\" : \"hidden\")};\r\n  animation: ${(props) => (props.open ? boxUp : boxDown)} 0.4s linear;\r\n  transition: visibility 0.4s ease-in;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 10px;\r\n\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n  color: #343a40;\r\n`;\r\n\r\nconst TodoCreate = () => {\r\n  const [open, setOpen] = useState(true);\r\n  const onToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  const { dispatch, nextId } = useContext(TodoListContext);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleKeyPress = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      dispatch({\r\n        type: \"ADD\",\r\n        payload: { text: text, done: false, id: nextId.current, },\r\n      });\r\n\r\n      nextId.current++;\r\n      setOpen(false);\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setText(value);\r\n  };\r\n\r\n  const onTransitionEnd = () => {\r\n    inputRef.current && inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InsertFormPositioner open={open} onTransitionEnd={onTransitionEnd}>\r\n        <InsertForm>\r\n          <Input\r\n            autoFocus\r\n            placeholder=\"오늘은 뭐하지\"\r\n            onKeyPress={handleKeyPress}\r\n            value={text}\r\n            onChange={onChange}\r\n            tabIndex=\"0\"\r\n            ref={inputRef}\r\n          ></Input>\r\n        </InsertForm>\r\n      </InsertFormPositioner>\r\n\r\n      <CircleButton onClick={onToggle} tabIndex=\"0\" open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoCreate;\r\n","// Reducer : 데이터를 안전하게 조작하기 위한 구조\r\n\r\nconst saveItems = (newItems) => {\r\n  localStorage.setItem(\"data\", JSON.stringify(newItems));\r\n};\r\n\r\n// state : 상태, 데이터\r\n// action : 상태를 ~~게 바꿈\r\n/*\r\nstate =\r\n{\r\n  uid: user의 id,\r\n  date: yyyymmdd,\r\n  todos : [{ id: 1, text: \"놀기\", done: false },{ id: 2, text: \"먹기\", done: true }]\r\n}\r\n*/\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD\": {\r\n      const newTodos = state.todos.concat(action.payload);\r\n      const nextState = { ...state, todos: newTodos };\r\n      saveItems(nextState);\r\n      return nextState;\r\n    }\r\n    case \"DELETE\": {\r\n      const newTodos = state.todos.filter(\r\n        (item) => item.id !== action.payload.id\r\n      );\r\n      const nextState = { ...state, todos: newTodos };\r\n      saveItems(nextState);\r\n      return nextState;\r\n    }\r\n    case \"DONE\": {\r\n      const newTodos = state.todos.map((item) =>\r\n        item.id === action.payload.id ? { ...item, done: !item.done } : item\r\n      );\r\n      const nextState = { ...state, todos: newTodos };\r\n      saveItems(nextState);\r\n      return nextState;\r\n    }\r\n    case \"SAVE\": {\r\n      const nextState = action.payload;\r\n      saveItems(nextState);\r\n      return nextState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import TodoHead from \"components/TodoHead\";\r\nimport TodoList from \"components/TodoList\";\r\nimport { TodoTemplate } from \"components/TodoTemplate\";\r\nimport TodoListContext from \"context/TodoContext\";\r\nimport TodoCreate from \"components/TodoCreate\";\r\nimport { useContext, useEffect, useReducer, useRef } from \"react\";\r\nimport reducer from \"context/TodoListReducer\";\r\n\r\nimport LoginContext from \"context/LoginContext\";\r\nimport { getTodos, initialState } from \"server/firestore\";\r\n\r\nconst Home = () => {\r\n  const { userObj } = useContext(LoginContext);\r\n  const [data, dispatch] = useReducer(reducer, initialState(userObj.uid));\r\n  let nextId = useRef(1);\r\n\r\n  useEffect(() => {\r\n    getTodos(dispatch, userObj, nextId);\r\n  }, [userObj]);\r\n\r\n  return (\r\n    <>\r\n      <TodoTemplate>\r\n        <TodoListContext.Provider value={{ dispatch, data, nextId }}>\r\n          <TodoHead></TodoHead>\r\n          <TodoList></TodoList>\r\n          <TodoCreate></TodoCreate>\r\n        </TodoListContext.Provider>\r\n      </TodoTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nconst ListTemplate = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`;\r\n\r\nconst List = () => {\r\n  return (\r\n    <ListTemplate>\r\n      <h2 className=\"title\">List</h2>\r\n    </ListTemplate>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { auth } from \"server/fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AuthContainer = styled.form`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst AuthInput = styled.input`\r\n  max-width: 320px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n  color: black;\r\n  box-sizing: content-box;\r\n`;\r\n\r\nconst AuthSubmit = styled.input`\r\n  max-width: 320px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n  color: black;\r\n  box-sizing: content-box;\r\n  text-align: center;\r\n  background: #ffab4c;\r\n  color: white;\r\n  margin-top: 10px;\r\n  box-sizing: content-box;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AuthSwitch = styled.span`\r\n  color: #ffab4c;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-bottom: 50px;\r\n  display: block;\r\n  font-size: 14px;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst AuthError = styled.span`\r\n  color: tomato;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        // create account\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        // log in\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthContainer onSubmit={onSubmit}>\r\n        <AuthInput\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <AuthInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <AuthSubmit\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <AuthError>{error}</AuthError>}\r\n      </AuthContainer>\r\n      <AuthSwitch onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </AuthSwitch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { auth } from \"server/fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  fetchSignInMethodsForEmail,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\n\r\nimport { FcGoogle, FcIdea } from \"react-icons/fc\";\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 90vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AuthBtns = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AuthBtn = styled.button`\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  border: none;\r\n  padding: 10px 10px;\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n  background: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    }\r\n    try {\r\n      await signInWithPopup(auth, provider);\r\n    } catch (error) {\r\n      if (error.code === \"auth/account-exists-with-different-credential\") {\r\n        const {\r\n          customData: { email },\r\n        } = error;\r\n        const methods = await fetchSignInMethodsForEmail(auth, email);\r\n        setError(`${email} is already ${methods[0]} account`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <Title>\r\n        <FcIdea />\r\n        <div>오늘 할 일을 기록해봐요</div>\r\n      </Title>\r\n\r\n      <AuthForm />\r\n      <AuthBtns>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n        <AuthBtn onClick={onSocialClick} name=\"google\">\r\n          <div>구글로 로그인</div>\r\n          <FcGoogle />\r\n        </AuthBtn>\r\n      </AuthBtns>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"server/fbase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UserTemplate = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst User = () => {\r\n  const history = useNavigate();\r\n  const onLogOutClick = () => {\r\n    auth.signOut();\r\n    history(\"/\");\r\n  };\r\n  return (\r\n    <UserTemplate>\r\n      <h2 className=\"title\">User</h2>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </UserTemplate>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdViewList, MdHome, MdPerson } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 512px;\r\n  margin: 0 auto;\r\n  margin-top: 32px;\r\n  margin-bottom: 15px;\r\n  align-self: center;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  width: 512px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst Navigation = () => (\r\n  <Nav>\r\n    <ul>\r\n      <IconContext.Provider value={{ color: \"#FF9B6A\", size: \"2em\" }}>\r\n        <Li>\r\n          <Link to=\"/list\">\r\n            <MdViewList />\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <MdHome />\r\n          </Link>\r\n          <Link to=\"/user\">\r\n            <MdPerson />\r\n          </Link>\r\n        </Li>\r\n      </IconContext.Provider>\r\n    </ul>\r\n  </Nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import LoginContext from \"context/LoginContext\";\r\nimport React, { useContext } from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport List from \"routes/List\";\r\nimport Login from \"routes/Login\";\r\nimport User from \"routes/User\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = () => {\r\n  const { userObj } = useContext(LoginContext);\r\n  const isLoggedIn = Boolean(userObj);\r\n\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation />}\r\n      <Routes>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\" element={<Home />}></Route>\r\n            <Route exact path=\"/list\" element={<List />}></Route>\r\n            <Route exact path=\"/user\" element={<User />}></Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\" element={<Login />}></Route>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import \"App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport LoginContext from \"context/LoginContext\";\r\nimport { onAuthStateChanged } from \"@firebase/auth\";\r\nimport { auth } from \"server/fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        // signed in\r\n        const name = user.displayName === null ? \"뉴비\" : user.displayName;\r\n        setUserObj({\r\n          displayName: name,\r\n          uid: user.uid,\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = auth.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoginContext.Provider\r\n        value={{\r\n          refreshUser,\r\n          userObj,\r\n        }}\r\n      >\r\n        {init ? <AppRouter /> : \"Initializing...\"}\r\n      </LoginContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}