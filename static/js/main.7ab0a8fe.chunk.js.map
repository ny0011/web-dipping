{"version":3,"sources":["context/TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","components/TodoCreate.js","context/TodoListReducer.js","App.js","index.js"],"names":["initialTodoList","TodoListContext","createContext","TodoHeadBlock","styled","div","TodoHead","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","undoneTodos","useContext","data","filter","item","done","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","id","text","dispatch","onClick","e","type","payload","TodoListBlock","TodoList","map","TodoTemplateBlock","TodoTemplate","children","CircleButton","button","open","boxUp","keyframes","boxDown","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setText","nextId","inputRef","useRef","onTransitionEnd","current","focus","placeholder","onKeyPress","event","key","preventDefault","value","onChange","target","tabIndex","ref","initialState","reducer","state","action","newArray","concat","sessionStorage","setItem","JSON","stringify","GlobalStyle","createGlobalStyle","App","defaultData","parse","getItem","useReducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab0a8fe.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\n// 초기 데이터\r\n// 상위 provider가 없는데 하위 컴포넌트가 이걸 읽으려고 할 때 \r\n// 앱 크래시를 막는 방어 데이터\r\nconst initialTodoList = []\r\n\r\n// 초기값이 []인 컨텍스트 생성\r\nconst TodoListContext = createContext(initialTodoList)\r\n\r\nexport default TodoListContext","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 24px;\r\n\r\n  border-bottom: 1px solid #e9ecef;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n\r\n  .task-left {\r\n    color: #7c83fd;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\n\r\nfunction TodoHead() {\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString(\"ko-KR\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\"\r\n  })\r\n  const dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" })\r\n\r\n  const { data } = useContext(TodoListContext)\r\n  const undoneTodos = data.filter((item) => item.done === false)\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"task-left\">{undoneTodos.length}개 남음</div>\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default TodoHead;\r\n","import styled, { css } from \"styled-components\";\r\nimport { MdDone, MdDelete } from \"react-icons/md\";\r\nimport { useContext } from \"react\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #8ca1a5;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #787a91;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #297f87;\r\n      color: #297f87;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: #787a91;\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\nconst TodoItem = ({ id, done, text }) => {\r\n  const { dispatch } = useContext(TodoListContext);\r\n\r\n  const onRemoveClick = (e) => {\r\n    dispatch({ type: \"delete\", payload: { id } });\r\n  };\r\n  const onCircleClick = (e) => {\r\n    dispatch({ type: \"done\", payload: { id } });\r\n  };\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onCircleClick}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemoveClick}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px;\r\n  padding-bottom: 48px;\r\n  overflow-y: auto;\r\n  background: #b5deff;\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 15px;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 15px;\r\n    background-color: darkgrey;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #7c83fd;\r\n    border: 3px solid transparent;\r\n    background-clip: content-box;\r\n    border-bottom-right-radius: 10px;\r\n  }\r\n`;\r\n\r\n// context를 사용하는 consumer\r\n// useContext로 context를 지정해두면 이 앱 밖에서 provider를 찾음\r\nconst TodoList = () => {\r\n  const { data } = useContext(TodoListContext);\r\n  return (\r\n    <TodoListBlock>\r\n      {data.map((item) => {\r\n        return (\r\n          <TodoItem\r\n            text={item.text}\r\n            done={item.done}\r\n            id={item.id}\r\n            key={item.id}\r\n          ></TodoItem>\r\n        );\r\n      })}\r\n    </TodoListBlock>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import styled from \"styled-components\";\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  width: 512px;\r\n  height: 768px;\r\n\r\n  position: relative;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);\r\n\r\n  margin: 0 auto;\r\n\r\n  margin-top: 96px;\r\n  margin-bottom: 32px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const TodoTemplate = ({ children }) => {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n};\r\n","import { useContext, useRef, useState } from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport TodoListContext from \"../context/TodoContext\";\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #63e6be;\r\n  }\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst boxUp = keyframes`\r\n  from {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst boxDown = keyframes`\r\n  from {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n  visibility: ${(props) => (props.open ? \"visible\" : \"hidden\")};\r\n  animation: ${(props) => (props.open ? boxUp : boxDown)} 0.4s linear;\r\n  transition: visibility 0.4s ease-in;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 15px;\r\n  border-bottom-right-radius: 10px;\r\n\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TodoCreate = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const onToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  const { dispatch, nextId } = useContext(TodoListContext);\r\n\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      dispatch({ type: \"add\", payload: { text: text, done: false, id: nextId.current } });\r\n\r\n      nextId.current++;\r\n      setOpen(false);\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setText(value);\r\n  };\r\n\r\n  const onTransitionEnd = () => {\r\n    inputRef.current && inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InsertFormPositioner open={open} onTransitionEnd={onTransitionEnd}>\r\n        <InsertForm>\r\n          <Input\r\n            placeholder=\"오늘은 뭐하지\"\r\n            onKeyPress={handleKeyPress}\r\n            value={text}\r\n            onChange={onChange}\r\n            tabIndex=\"0\"\r\n            ref={inputRef}\r\n          ></Input>\r\n        </InsertForm>\r\n      </InsertFormPositioner>\r\n\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoCreate;\r\n","// Reducer : 데이터를 안전하게 조작하기 위한 구조\r\n\r\n// initial state : 초기 상태\r\nexport const initialState = [];\r\n\r\n// state : 상태, 데이터\r\n// ex) 할 일 : { id: 1, text: \"놀기\", done: false },\r\n// action : 상태를 ~~게 바꿈\r\nconst reducer = (state, action) => {\r\n  let newArray = [];\r\n  switch (action.type) {\r\n    case \"add\":\r\n      newArray = state.concat(action.payload);\r\n      sessionStorage.setItem(\"data\", JSON.stringify(newArray));\r\n      return newArray;\r\n    case \"delete\":\r\n      newArray = state.filter((item) => item.id !== action.payload.id);\r\n      sessionStorage.setItem(\"data\", JSON.stringify(newArray));\r\n      return newArray;\r\n    case \"done\":\r\n      newArray = state.map((item) =>\r\n        item.id === action.payload.id ? { ...item, done: !item.done } : item\r\n      );\r\n      sessionStorage.setItem(\"data\", JSON.stringify(newArray));\r\n      return newArray;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport \"./App.css\";\r\nimport TodoHead from \"./components/TodoHead\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport { TodoTemplate } from \"./components/TodoTemplate\";\r\nimport TodoListContext from \"./context/TodoContext\";\r\nimport TodoCreate from \"./components/TodoCreate\";\r\nimport { useReducer, useRef } from \"react\";\r\nimport reducer, { initialState } from \"./context/TodoListReducer\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: #e9e9e9;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  //const mockdata = [{ id: 0, text: \"놀기\", done: true }];\r\n  const defaultData =\r\n    JSON.parse(sessionStorage.getItem(\"data\")) || initialState;\r\n  const [data, dispatch] = useReducer(reducer, defaultData);\r\n  let nextId = useRef(1);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle></GlobalStyle>\r\n      <TodoTemplate>\r\n        <TodoListContext.Provider value={{ dispatch, data, nextId }}>\r\n          <TodoHead></TodoHead>\r\n          <TodoList></TodoList>\r\n          <TodoCreate></TodoCreate>\r\n        </TodoListContext.Provider>\r\n      </TodoTemplate>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}